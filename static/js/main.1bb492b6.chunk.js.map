{"version":3,"sources":["types.ts","utils/is.ts","features/textarea/textareaSlice.ts","features/data/dataSlice.ts","OptionMenu.tsx","object/DataType.ts","ControlsArea.tsx","TextArea.tsx","object/BooleanType.tsx","object/NumberType.tsx","object/StringType.tsx","Expander.tsx","VisualizedData/EditButtons.tsx","VisualizedData/ValueEditor.tsx","VisualizedData/KeyEditButtons.tsx","VisualizedData/KeyEditor.tsx","object/ObjectType.tsx","VisualizedData/VisualizedData.tsx","Footer.tsx","Header.tsx","Page.tsx","App.tsx","index.tsx"],"names":["EditType","ValidityType","isArray","data","Array","isObject","_","isNumber","isString","getParentPathAndName","path","parentPath","name","length","initial","last","dataSlice","createSlice","initialState","editMode","reducers","setData","state","action","payload","pasteSample","SampleJson","deletePath","filter","index","unset","targetData","get","set","parseInt","updateDataOfPath","updateKeyOfPath","newKey","key","newObject","toPairs","forEach","value","setEditMode","insertDataAfterPath","newData","newName","splice","duplicatePath","keys","Object","type","Key","OptionMenu","ariaLabelledby","dispatch","useDispatch","actions","onPasteClicked","useCallback","className","aria-labelledby","id","onClick","DataType","isTextareaClose","localText","validity","None","width","isDragging","textareaSlice","toggleTextarea","setLocalText","text","JSON","parse","Valid","e","Invalid","setWidth","setDragging","ControlsArea","useEffect","Clipboard","useSelector","textarea","isEmpty","useMemo","isValid","onDeleteButtonClicked","style","overflow","data-clipboard-target","disabled","title","blob","Blob","saveAs","downloadJson","data-toggle","aria-haspopup","aria-expanded","TextArea","stringify","useState","setTimeout","timeoutId","setTimeoutId","jsonText","localStorage","getItem","clearTimeout","setItem","onChange","newValue","editor","useRef","current","layout","language","theme","ref","options","automaticLayout","formatOnPaste","formatOnType","renderLineHighlight","autoClosingOvertype","cursorStyle","quickSuggestions","scrollBeyondLastLine","snippetSuggestions","minimap","enabled","BooleanType","readOnly","checked","NumberType","StringType","result","validator","isURL","match","href","target","rel","src","alt","Expander","defaultValue","onChangeExpansion","expanded","setExpanded","classes","join","EditButtons","hidden","onCopyButtonClicked","event","navigator","clipboard","currentTarget","getAttribute","writeText","onEditButtonClicked","Value","data-value","getType","Number","String","isBoolean","Boolean","isNull","Null","cast","ValueEditor","onCancel","onUpdate","setValue","onValueChanged","setType","onTypeChanged","newType","onOKClicked","onCancelClicked","onCheckboxClicked","textFieldRef","focus","keyCode","setKeyCode","onKeyDown","onKeyUp","preventDefault","insert","KeyEditButtons","KeyEditor","checkValid","setValid","ObjectType","onValueUpdate","onKeyUpdate","onAddButtonClicked","dataset","includes","rows","map","newPath","data-name","isEqual","typeLabel","headerLabel","toString","data-path","data-level","isExpanded","VisualizedData","Footer","Header","Page","onMouseDown","onMouseUpOrLeave","onMouseMove","newWidth","clientX","leadingStyle","onMouseUp","onMouseLeave","App","previousEvent","setPreviousEvent","body","document","getElementsByTagName","addEventListener","stopPropagation","classList","remove","add","rootReducer","combineReducers","reducer","store","configureStore","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.1bb492b6.chunk.js","sourcesContent":["export type Path = string[];\n\nexport enum EditType {\n  Key,\n  Value,\n}\n\nexport interface EditMode {\n  path: Path;\n  type: EditType;\n}\n","import _ from 'lodash';\n\nexport const isArray = (data: any) => Array.isArray(data);\nexport const isObject = (data: any) => !isArray(data) && _.isObject(data);\nexport const isNull = (data: any) => data === null; \nexport const isNumber = (data: any) => _.isNumber(data); \nexport const isString = (data: any) => _.isString(data); \nexport const isBoolean = (data: any) => _.isBoolean(data);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum ValidityType {\n  Valid = 'valid',\n  Invalid = 'invalid',\n  None = 'none',\n}\n\nconst InitialFrameWidth = 400;\n\ninterface State {\n  isTextareaClose: boolean;\n  localText: string;\n  validity: ValidityType;\n  width: number;\n  isDragging: boolean;\n}\n\nconst initialState: State = {\n  isTextareaClose: false,\n  localText: '',\n  validity: ValidityType.None,\n  width: InitialFrameWidth,\n  isDragging: false,\n};\n\nexport const textareaSlice = createSlice({\n  name: 'textarea',\n  initialState,\n  reducers: {\n    toggleTextarea: (state: State) => {\n      state.isTextareaClose = !state.isTextareaClose;\n    },\n    setLocalText: (state: State, action: PayloadAction<string>) => {\n      const text = action.payload;\n      state.localText = text;\n      if (text.length > 0) {\n        try {\n          JSON.parse(action.payload);\n          state.validity = ValidityType.Valid;\n        } catch (e) {\n          state.validity = ValidityType.Invalid;\n        }\n      } else {\n        state.validity = ValidityType.None;\n      }\n    },\n    setWidth: (state: State, action: PayloadAction<number>) => {\n      state.width = action.payload;\n    },\n    setDragging: (state: State, action: PayloadAction<boolean>) => {\n      state.isDragging = action.payload;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport SampleJson from '../../samples/simple.json';\nimport { Path, EditMode, EditType } from '../../types';\nimport { isArray } from '../../utils/is';\n/**\n * State of dataSlice\n * @param data the data.\n * @param editPath the path of editable. `null` means no editable data.\n */\n\nconst getParentPathAndName = (path: Path): [Path, string] => {\n  let parentPath: Path = [];\n  let name = '';\n  if (path.length === 1) {\n    name = path[0];\n  } else if (path.length > 1) {\n    parentPath = _.initial(path);\n    name = _.last<string>(path)!;\n  } else {\n  }\n  return [parentPath, name];\n};\n\ninterface State {\n  data: any;\n  editMode: EditMode | null;\n}\n\nconst initialState: State = {\n  data: null,\n  editMode: null,\n};\n\nexport const dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state: State, action: PayloadAction<any>) => {\n      state.data = action.payload;\n    },\n    pasteSample: (state: State) => {\n      state.data = SampleJson;\n    },\n    deletePath: (state: State, action: PayloadAction<Path>) => {\n      const path = action.payload;\n      const [parentPath, name] = getParentPathAndName(path);\n      const data = state.data;\n      if (parentPath.length === 0) {\n        // the traget is root object\n        if (isArray(data)) {\n          // Array\n          state.data = data.filter((_, index) => `${index}` !== name);\n        } else {\n          // Object\n          _.unset(state.data, path);\n        }\n      } else {\n        // the traget is not root object\n        const targetData = _.get(data, parentPath);\n        if (isArray(targetData)) {\n          // Array\n          _.set(\n            state.data,\n            parentPath,\n            targetData.filter((_, index) => index !== parseInt(name))\n          );\n        } else {\n          // Object\n          _.unset(state.data, path);\n        }\n      }\n    },\n    updateDataOfPath: (\n      state: State,\n      action: PayloadAction<{ data: any; path: Path }>\n    ) => {\n      const { data, path } = action.payload;\n      _.set(state.data, path, data);\n    },\n    updateKeyOfPath: (\n      state: State,\n      action: PayloadAction<{ key: string; path: Path }>\n    ) => {\n      const { key: newKey, path } = action.payload;\n      // get\n      const [parentPath, name] = getParentPathAndName(path);\n      const targetData =\n        parentPath.length === 0 ? state.data : _.get(state.data, parentPath);\n      let newObject = {};\n      _.toPairs(targetData).forEach(([key, value]) => {\n        if (key === name) {\n          newObject[newKey] = value;\n        } else {\n          newObject[key] = value;\n        }\n      });\n      // set\n      if (parentPath.length > 0) {\n        _.set(state.data, parentPath, newObject);\n      } else {\n        state.data = newObject;\n      }\n    },\n    setEditMode: (state: State, action: PayloadAction<EditMode | null>) => {\n      state.editMode = action.payload;\n    },\n    insertDataAfterPath: (state: State, action: PayloadAction<Path>) => {\n      const [parentPath, name] = getParentPathAndName(action.payload);\n      // get\n      const newData =\n        parentPath.length === 0 ? state.data : _.get(state.data, parentPath);\n      // insert\n      if (isArray(newData)) {\n        const newName = name === '' ? 0 : parseInt(name) + 1;\n        newData.splice(newName, 0, null);\n      }\n      // set\n      _.set(state.data, parentPath, newData);\n    },\n    duplicatePath: (state: State, action: PayloadAction<Path>) => {\n      const [parentPath, name] = getParentPathAndName(action.payload);\n      // get\n      const newData =\n        parentPath.length === 0 ? state.data : _.get(state.data, parentPath);\n      // insert\n      if (isArray(newData)) {\n        // array\n        if (name === '') {\n          newData.splice(0, 0, newData[0]);\n        } else {\n          const newName = parseInt(name) + 1;\n          newData.splice(newName, 0, newData[name]);\n        }\n        // set\n        _.set(state.data, parentPath, newData);\n      } else {\n        // object\n        let newObject = {};\n        const newKey = '';\n        const keys = Object.keys(newData);\n        // if insert before the first element\n        if (name === '') {\n          newObject[newKey] = keys.length > 0 ? newData[keys[0]] : null;\n        }\n        keys.forEach((key) => {\n          newObject[key] = newData[key];\n          if (key === name) {\n            newObject[newKey] = newData[key];\n          }\n        });\n        // set\n        if (parentPath.length === 0) {\n          state.data = newObject;\n        } else {\n          _.set(state.data, parentPath, newObject);\n        }\n        // set edit mode\n        state.editMode = {\n          path: [...parentPath, newKey],\n          type: EditType.Key,\n        };\n      }\n    },\n  },\n});\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { dataSlice } from './features/data/dataSlice';\n\ninterface Props {\n  ariaLabelledby: string;\n}\n\nconst OptionMenu: React.FC<Props> = ({ ariaLabelledby }) => {\n  const dispatch = useDispatch();\n  const { pasteSample } = dataSlice.actions;\n\n  const onPasteClicked = useCallback(() => {\n    dispatch(pasteSample());\n  }, [dispatch, pasteSample]);\n\n  return (\n    <div className=\"dropdown-menu\" aria-labelledby={ariaLabelledby}>\n      {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n      <a id=\"paste-sample-json-menu-item\" className=\"dropdown-item\" onClick={onPasteClicked}>\n        Paste Sample JSON\n      </a>\n    </div>\n  );\n};\n\nexport default OptionMenu;\n","import { isArray, isNumber, isString, isBoolean, isNull } from '../utils/is';\n\nexport enum DataType {\n  Object = 'object',\n  Array = 'array',\n  String = 'string',\n  Number = 'number',\n  Boolean = 'boolean',\n  Null = 'null',\n}\n\nexport const getType = (value: any): DataType => {\n  if (isNumber(value)) {\n    return DataType.Number;\n  } else if (isString(value)) {\n    return DataType.String;\n  } else if (isBoolean(value)) {\n    return DataType.Boolean;\n  } else if (isNull(value)) {\n    return DataType.Null;\n  } else if (isArray(value)) {\n    return DataType.Array;\n  } else {\n    return DataType.Object;\n  }\n};\n\nexport const cast = (type: DataType, value: any): any => {\n  const currentType = getType(value);\n  switch (currentType) {\n    case DataType.String:\n      switch (type) {\n        case DataType.Number:\n          return parseInt(value) || 0;\n        case DataType.Boolean:\n          return value.length > 0;\n        case DataType.Null:\n          return null;\n        case DataType.Array:\n          return [];\n        case DataType.Object:\n          return {};\n        default:\n          return value;\n      }\n    case DataType.Number:\n      switch (type) {\n        case DataType.String:\n          return `${value}`;\n        case DataType.Boolean:\n          return Boolean(value);\n        case DataType.Null:\n          return null;\n        case DataType.Array:\n          return [];\n        case DataType.Object:\n          return {};\n        default:\n          return value;\n      }\n    case DataType.Boolean:\n      switch (type) {\n        case DataType.String:\n          return value ? 'true' : 'false';\n        case DataType.Number:\n          return value ? 1 : 0;\n        case DataType.Null:\n          return null;\n        case DataType.Array:\n          return [];\n        case DataType.Object:\n          return {};\n        default:\n          return value;\n      }\n    case DataType.Null:\n      switch (type) {\n        case DataType.String:\n          return '';\n        case DataType.Number:\n          return 0;\n        case DataType.Boolean:\n          return false;\n        case DataType.Array:\n          return [];\n        case DataType.Object:\n          return {};\n        default:\n          return value;\n      }\n    case DataType.Object:\n      switch (type) {\n        case DataType.String:\n          return '';\n        case DataType.Number:\n          return 0;\n        case DataType.Boolean:\n          return false;\n        case DataType.Null:\n          return null;\n        case DataType.Array:\n          return [];\n        default:\n          return value;\n      }\n    case DataType.Array:\n      switch (type) {\n        case DataType.String:\n          return '';\n        case DataType.Number:\n          return 0;\n        case DataType.Boolean:\n          return false;\n        case DataType.Null:\n          return null;\n        case DataType.Object:\n          return {};\n        default:\n          return value;\n      }\n    default:\n      return value;\n  }\n};\n","import React, { useEffect, useMemo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Clipboard from 'clipboard';\nimport { saveAs } from 'file-saver';\nimport OptionMenu from './OptionMenu';\nimport { RootState } from '.';\nimport { dataSlice } from './features/data/dataSlice';\nimport { ValidityType, textareaSlice } from './features/textarea/textareaSlice';\n\nconst ControlsArea: React.FC = () => {\n  useEffect(() => {\n    // init clipboard\n    new Clipboard('#copy-to-clipboard');\n  }, []);\n\n  const downloadJson = (text: string) => {\n    var blob = new Blob([text], { type: 'application/json;charset=utf-8' });\n    saveAs(blob, 'data.json');\n  };\n\n  const dispatch = useDispatch();\n  const { setData } = dataSlice.actions;\n  const { setLocalText } = textareaSlice.actions;\n\n  const text = useSelector((state: RootState) => state.textarea.localText);\n  const isEmpty = useMemo(() => text.length === 0, [text.length]);\n  const isValid = useSelector(\n    (state: RootState) => state.textarea.validity === ValidityType.Valid\n  );\n\n  const onDeleteButtonClicked = useCallback(() => {\n    dispatch(setData(null));\n    dispatch(setLocalText(''));\n  }, [dispatch, setData, setLocalText]);\n\n  return (\n    <nav className=\"navbar px-1 py-0\" style={{ overflow: 'visible' }}>\n      <ul className=\"nav\">\n        <li className=\"nav-item\">\n          <button\n            id=\"copy-to-clipboard\"\n            data-clipboard-target=\"#json-text\"\n            disabled={!isValid}\n            className=\"btn btn-link\"\n            title=\"Copy\"\n          >\n            <i className=\"far fa-copy\" />\n          </button>\n        </li>\n        <li className=\"nav-item\">\n          <button\n            id=\"donwload\"\n            disabled={!isValid}\n            className=\"btn btn-link\"\n            onClick={() => downloadJson(text)}\n            title=\"Download\"\n          >\n            <i className=\"fas fa-file-download\" />\n          </button>\n        </li>\n        <li className=\"nav-item\">\n          <button\n            className=\"btn btn-link\"\n            disabled={isEmpty}\n            onClick={onDeleteButtonClicked}\n            title=\"Clear\"\n          >\n            <i className=\"far fa-trash-alt\" />\n          </button>\n        </li>\n        <li className=\"dropdown nav-item\">\n          <button\n            className=\"btn btn-link\"\n            title=\"More\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            id=\"dropdownMenuButton\"\n          >\n            <i className=\"fas fa-ellipsis-v\" />\n          </button>\n          <OptionMenu ariaLabelledby=\"dropdownMenuButton\" />\n        </li>\n      </ul>\n      <ul className=\"nav justify-content-end\">\n        <li className=\"control-count nav-item\">\n          <span\n            className={`text-count ${\n              text.length > 0 && !isValid ? 'invalid' : ''\n            }`}\n          >\n            {text.length}\n          </span>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default ControlsArea;\n","import React, {\n  useState,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MonacoEditor from 'react-monaco-editor';\nimport ControlsArea from './ControlsArea';\nimport { RootState } from './index';\nimport { dataSlice } from './features/data/dataSlice';\nimport { textareaSlice } from './features/textarea/textareaSlice';\n\nconst tabSize = 4;\nconst localStorageKey = 'json-text';\n\nconst TextArea: React.FC = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state: RootState) => state.data.data);\n\n  const text = useMemo(() => {\n    return data === null ? '' : JSON.stringify(data, null, tabSize);\n  }, [data]);\n  const [timeoutId, setTimeoutId] = useState<NodeJS.Timeout>(\n    setTimeout(() => {}, 0)\n  );\n  const { setData } = dataSlice.actions;\n\n  const localText = useSelector((state: RootState) => state.textarea.localText);\n  const { setLocalText } = textareaSlice.actions;\n\n  // initialize\n  useEffect(() => {\n    // load from local storage\n    const jsonText = localStorage.getItem(localStorageKey);\n    if (jsonText) {\n      const data = JSON.parse(jsonText);\n      dispatch(setData(data));\n    }\n  }, [dispatch, setData]);\n\n  // state to local\n  useEffect(() => {\n    dispatch(setLocalText(text));\n  }, [text, dispatch, setLocalText]);\n\n  // local to state\n  useEffect(() => {\n    clearTimeout(timeoutId);\n    const id = setTimeout(() => {\n      try {\n        const data = localText.length > 0 ? JSON.parse(localText) : null;\n        dispatch(setData(data));\n        // Save to local storage\n        localStorage.setItem(localStorageKey, localText);\n      } catch {}\n    }, 1000);\n    setTimeoutId(id);\n  }, [dispatch, localText, setData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // update local text\n  const onChange = useCallback(\n    (newValue) => {\n      dispatch(setLocalText(newValue));\n    },\n    [dispatch, setLocalText]\n  );\n\n  // for updating layout of the editor\n  const isDragging = useSelector(\n    (state: RootState) => state.textarea.isDragging\n  );\n  const editor = useRef<MonacoEditor>(null);\n  useEffect(() => {\n    if (!isDragging) {\n      editor.current?.editor?.layout();\n    }\n  }, [isDragging, editor]);\n\n  return (\n    <div className=\"textarea-column d-flex flex-column h-100\">\n      <ControlsArea />\n      <div className=\"monaco-wrapper h-100 flex-grow-1\">\n        <MonacoEditor\n          language=\"json\"\n          theme=\"vs\"\n          value={localText}\n          ref={editor}\n          onChange={onChange}\n          options={{\n            automaticLayout: true,\n            formatOnPaste: true,\n            formatOnType: true,\n            renderLineHighlight: 'none',\n            autoClosingOvertype: 'always',\n            cursorStyle: 'block',\n            quickSuggestions: false,\n            scrollBeyondLastLine: false,\n            snippetSuggestions: 'none',\n            minimap: {\n              enabled: false,\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TextArea;\n","import React, { ChangeEvent } from 'react';\n\ninterface Props {\n  data: boolean;\n  readOnly?: boolean;\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst BooleanType: React.FC<Props> = ({ data, readOnly = true, onChange }) => {\n  return (\n    <label className=\"boolean-type\">\n      <input\n        type=\"checkbox\"\n        checked={data}\n        readOnly={readOnly}\n        onChange={onChange}\n      />\n      <span>{data ? 'true' : 'false'}</span>\n    </label>\n  );\n};\n\nexport default BooleanType;\n","import React from 'react';\n\ninterface Props {\n  data: number;\n}\n\nconst NumberType: React.FC<Props> = ({ data }) => {\n  return <span className=\"number-type\">{data}</span>;\n};\n\nexport default NumberType;\n","import React, { ReactElement } from 'react';\nimport validator from 'validator';\n\ninterface Props {\n  data: string;\n}\n\nconst StringType: React.FC<Props> = ({ data }) => {\n  let result: ReactElement | string = '';\n  if (validator.isURL(data)) {\n    if (data.match(/\\.(jpg|jpeg|png|gif)$/)) {\n      result = (\n        <a href={data} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={data} alt={data} />\n          <br />\n          <span>{data}</span>\n        </a>\n      );\n    } else {\n      result = (\n        <a href={data} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span>{data}</span>\n        </a>\n      );\n    }\n  } else {\n    result = `\"${data}\"`;\n  }\n  return <span className=\"string-type\">{result}</span>;\n};\n\nexport default StringType;\n","import React, { useState, useCallback } from 'react';\n\ninterface Props {\n  defaultValue: boolean;\n  onChangeExpansion?: (flag: boolean) => void;\n}\n\nconst Expander: React.FC<Props> = ({ defaultValue, onChangeExpansion }) => {\n  const [expanded, setExpanded] = useState(defaultValue);\n\n  const onClick = useCallback(() => {\n    const newValue = !expanded;\n    setExpanded(newValue);\n    onChangeExpansion && onChangeExpansion(newValue);\n  }, [expanded, onChangeExpansion]);\n\n  const classes = [\n    'component-expander',\n    expanded ? 'expanded' : '',\n    'btn',\n    'btn-link',\n  ].join(' ');\n\n  return (\n    <button className={classes} onClick={onClick}>\n      <i className=\"fas fa-chevron-down\" />\n    </button>\n  );\n};\n\nexport default Expander;\n","import React, { useCallback, SyntheticEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Path, EditType } from '../types';\nimport { dataSlice } from '../features/data/dataSlice';\nimport { isString, isNumber, isObject, isArray } from '../utils/is';\n\ninterface Props {\n  data: any;\n  path: Path;\n  hidden: boolean;\n}\n\nexport const EditButtons: React.FC<Props> = ({\n  data,\n  path,\n  hidden = false,\n}) => {\n  const onCopyButtonClicked = useCallback((event: SyntheticEvent) => {\n    if (navigator.clipboard) {\n      const value = event.currentTarget.getAttribute('data-value') || '';\n      navigator.clipboard.writeText(`${value}`);\n    }\n  }, []);\n\n  const dispatch = useDispatch();\n  const { deletePath, setEditMode } = dataSlice.actions;\n\n  const onDeleteButtonClicked = useCallback(() => {\n    dispatch(deletePath(path));\n  }, [path, dispatch, deletePath]);\n\n  const onEditButtonClicked = useCallback(() => {\n    dispatch(setEditMode({ path, type: EditType.Value }));\n  }, [dispatch, path, setEditMode]);\n\n  return (\n    <div\n      className={`edit-buttons d-flex flex-row align-items-start ${\n        hidden ? 'hidden' : ''\n      }`}\n    >\n      {!isArray(data) && !isObject(data) && (\n        <button\n          title=\"Edit the value\"\n          data-value={data}\n          className=\"btn btn-sm btn-link ml-1 edit-button\"\n          onClick={onEditButtonClicked}\n        >\n          <i className=\"far fa-edit\" />\n        </button>\n      )}\n      {navigator.clipboard && (isString(data) || isNumber(data)) && (\n        <button\n          title=\"Copy text\"\n          data-value={data}\n          className=\"btn btn-sm btn-link ml-1 copy-button\"\n          onClick={onCopyButtonClicked}\n        >\n          <i className=\"far fa-copy\" />\n        </button>\n      )}\n      <button\n        className=\"btn btn-sm btn-link ml-1 delete-button\"\n        onClick={onDeleteButtonClicked}\n      >\n        <i className=\"far fa-trash-alt\" />\n      </button>\n    </div>\n  );\n};\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { Path } from '../types';\nimport BooleanType from '../object/BooleanType';\nimport ObjectType from '../object/ObjectType';\nimport { DataType, getType, cast } from '../object/DataType';\n\ninterface Props {\n  path: Path;\n  defaultValue: any;\n  onCancel: () => void;\n  onUpdate: (path: Path, value: any) => void;\n}\n\nexport const ValueEditor: React.FC<Props> = ({\n  path,\n  defaultValue,\n  onCancel,\n  onUpdate,\n}) => {\n  // Value\n  const [value, setValue] = useState<any>(defaultValue);\n  const onValueChanged = useCallback(\n    (event) => {\n      // set value\n      const { value: newValue } = event.target;\n      setValue(newValue);\n    },\n    [setValue]\n  );\n  // Type\n  const [type, setType] = useState<DataType>(getType(defaultValue));\n  const onTypeChanged = useCallback(\n    (event) => {\n      const newType = event.target.value;\n      setValue(cast(newType, value));\n      setType(newType);\n    },\n    [value, setType]\n  );\n  // Buttons\n  const onOKClicked = useCallback(() => {\n    onUpdate(path, cast(type, value));\n  }, [onUpdate, path, type, value]);\n  const onCancelClicked = useCallback(() => {\n    onCancel();\n  }, [onCancel]);\n\n  // Boolean (checkbox)\n  const onCheckboxClicked = useCallback(\n    (event) => {\n      setValue(event.target.checked);\n    },\n    [setValue]\n  );\n\n  // Focus on editing\n  const textFieldRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    if (textFieldRef.current) {\n      textFieldRef.current.focus();\n    }\n  }, [textFieldRef, type]);\n\n  // Keyboard handling\n  const [keyCode, setKeyCode] = useState<number | null>(null);\n  const onKeyDown = useCallback((event) => {\n    setKeyCode(event.keyCode);\n  }, []);\n  const onKeyUp = useCallback(\n    (event) => {\n      if (\n        (event.key === 'Enter' || event.keyCode === 13) &&\n        keyCode === event.keyCode\n      ) {\n        onOKClicked();\n        event.preventDefault();\n      } else if (\n        (event.key === 'Escape' || event.keyCode === 27) &&\n        keyCode === event.keyCode\n      ) {\n        onCancelClicked();\n        event.preventDefault();\n      } else {\n        //\n      }\n    },\n    [onOKClicked, onCancelClicked, keyCode]\n  );\n\n  return (\n    <div className=\"value-editor d-flex\">\n      <div className=\"mr-1\">\n        {type === DataType.Object && (\n          <ObjectType data={{}} path={[]} insert={false} />\n        )}\n        {type === DataType.Array && (\n          <ObjectType data={[]} path={[]} insert={false} />\n        )}\n        {type === DataType.String && (\n          <input\n            type=\"text\"\n            className=\"text-editor form-control form-control-sm\"\n            value={value}\n            onChange={onValueChanged}\n            ref={textFieldRef}\n            onKeyDown={onKeyDown}\n            onKeyUp={onKeyUp}\n          />\n        )}\n        {type === DataType.Number && (\n          <input\n            type=\"number\"\n            className=\"text-editor form-control form-control-sm\"\n            value={value}\n            onChange={onValueChanged}\n            ref={textFieldRef}\n            onKeyDown={onKeyDown}\n            onKeyUp={onKeyUp}\n          />\n        )}\n        {type === DataType.Boolean && (\n          <BooleanType\n            data={value}\n            readOnly={false}\n            onChange={onCheckboxClicked}\n          />\n        )}\n        {type === DataType.Null && <span className=\"null\">null</span>}\n      </div>\n      <select\n        value={type}\n        onChange={onTypeChanged}\n        className=\"form-control form-control-sm type-selector\"\n      >\n        <option value={DataType.String}>string</option>\n        <option value={DataType.Number}>number</option>\n        <option value={DataType.Boolean}>boolean</option>\n        <option value={DataType.Null}>null</option>\n        <option value={DataType.Object}>object</option>\n        <option value={DataType.Array}>array</option>\n      </select>\n      <span className=\"buttons\">\n        <button className=\"ok-button btn btn-sm btn-link\" onClick={onOKClicked}>\n          <i className=\"fas fa-check-circle\" />\n        </button>\n        <button\n          className=\"cancel-button btn btn-sm btn-link\"\n          onClick={onCancelClicked}\n        >\n          <i className=\"fas fa-times-circle\" />\n        </button>\n      </span>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Path, EditType } from '../types';\nimport { dataSlice } from '../features/data/dataSlice';\nimport { isObject } from '../utils/is';\n\ninterface Props {\n  data: any;\n  path: Path;\n  hidden: boolean;\n}\n\nexport const KeyEditButtons: React.FC<Props> = ({\n  data,\n  path,\n  hidden = false,\n}) => {\n  const dispatch = useDispatch();\n  const { setEditMode } = dataSlice.actions;\n\n  const onEditButtonClicked = useCallback(() => {\n    dispatch(setEditMode({ path, type: EditType.Key }));\n  }, [dispatch, path, setEditMode]);\n\n  return (\n    <div\n      className={`edit-buttons d-flex flex-row align-items-start ${\n        hidden ? 'hidden' : ''\n      }`}\n    >\n      {isObject(data) && (\n        <button\n          title=\"Edit the key\"\n          data-value={data}\n          className=\"btn btn-sm btn-link mr-1\"\n          onClick={onEditButtonClicked}\n        >\n          <i className=\"far fa-edit\" />\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { Path } from '../types';\nimport { dataSlice } from '../features/data/dataSlice';\nimport { useDispatch } from 'react-redux';\n\ninterface Props {\n  path: Path;\n  defaultValue: any;\n  onCancel: () => void;\n  onUpdate: (path: Path, value: any) => void;\n  checkValid?: (newValue: string) => boolean;\n}\n\nexport const KeyEditor: React.FC<Props> = ({\n  path,\n  defaultValue,\n  onCancel,\n  onUpdate,\n  checkValid,\n}) => {\n  // Dispatch\n  const dispatch = useDispatch();\n  // Validation\n  const [isValid, setValid] = useState(true);\n  // Value\n  const [value, setValue] = useState<any>(defaultValue);\n  const onValueChanged = useCallback(\n    (event) => {\n      // set value\n      const { value: newValue } = event.target;\n      setValue(newValue);\n      // validation\n      if (checkValid) {\n        // check value and show\n        if (newValue === defaultValue) {\n          setValid(true);\n        } else {\n          setValid(checkValid(newValue));\n        }\n      }\n    },\n    [checkValid, defaultValue]\n  );\n  // Check valid\n  useEffect(() => {\n    setValid(defaultValue.length > 0);\n  }, [defaultValue]);\n  // OK Button\n  const onOKClicked = useCallback(() => {\n    if (isValid) {\n      onUpdate(path, value);\n    }\n  }, [isValid, onUpdate, path, value]);\n  // Cancel button\n  const { deletePath } = dataSlice.actions;\n  const onCancelClicked = useCallback(() => {\n    if (value === '') {\n      dispatch(deletePath(path));\n    }\n    onCancel();\n  }, [deletePath, dispatch, onCancel, path, value]);\n\n  // Focus on editing\n  const textFieldRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    if (textFieldRef.current) {\n      textFieldRef.current.focus();\n    }\n  }, [textFieldRef]);\n\n  // Keyboard handling\n  const [keyCode, setKeyCode] = useState<number | null>(null);\n  const onKeyDown = useCallback((event) => {\n    setKeyCode(event.keyCode);\n  }, []);\n  const onKeyUp = useCallback(\n    (event) => {\n      if (\n        (event.key === 'Enter' || event.keyCode === 13) &&\n        keyCode === event.keyCode\n      ) {\n        if (isValid) {\n          onOKClicked();\n        }\n        event.preventDefault();\n      } else if (\n        (event.key === 'Escape' || event.keyCode === 27) &&\n        keyCode === event.keyCode\n      ) {\n        onCancelClicked();\n        event.preventDefault();\n      } else {\n        //\n      }\n    },\n    [keyCode, isValid, onOKClicked, onCancelClicked]\n  );\n\n  return (\n    <div className=\"value-editor d-flex flex-row-reverse\">\n      <div>\n        <input\n          type=\"text\"\n          className={`text-editor form-control form-control-sm for-key ${\n            isValid ? '' : 'is-invalid'\n          }`}\n          value={value}\n          onChange={onValueChanged}\n          ref={textFieldRef}\n          onKeyUp={onKeyUp}\n          onKeyDown={onKeyDown}\n        />\n      </div>\n      <span className=\"buttons\">\n        <button\n          className=\"ok-button btn btn-sm btn-link\"\n          onClick={onOKClicked}\n          disabled={!isValid}\n        >\n          <i className=\"fas fa-check-circle\" />\n        </button>\n        <button\n          className=\"cancel-button btn btn-sm btn-link\"\n          onClick={onCancelClicked}\n        >\n          <i className=\"fas fa-times-circle\" />\n        </button>\n      </span>\n    </div>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport _ from 'lodash';\nimport BooleanType from './BooleanType';\nimport NumberType from './NumberType';\nimport StringType from './StringType';\nimport Expander from '../Expander';\nimport { EditButtons } from '../VisualizedData/EditButtons';\nimport { Path, EditType } from '../types';\nimport { ValueEditor } from '../VisualizedData/ValueEditor';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '..';\nimport { dataSlice } from '../features/data/dataSlice';\nimport { KeyEditButtons } from '../VisualizedData/KeyEditButtons';\nimport { KeyEditor } from '../VisualizedData/KeyEditor';\nimport { isArray } from '../utils/is';\n\ninterface Props {\n  data: any;\n  path: Path;\n  insert?: boolean;\n}\n\nconst maxLevel = 20;\n\nconst ObjectType: React.FC<Props> = ({ data, path, insert = true }) => {\n  const [expanded, setExpanded] = useState(true);\n\n  const onChangeExpansion = (isExpanded: boolean) => {\n    setExpanded(isExpanded);\n  };\n\n  // for editing\n  const editMode = useSelector((state: RootState) => state.data.editMode);\n\n  const dispatch = useDispatch();\n  const {\n    setEditMode,\n    updateDataOfPath,\n    updateKeyOfPath,\n    duplicatePath,\n  } = dataSlice.actions;\n  const onValueUpdate = useCallback(\n    (path, data) => {\n      // update the value\n      dispatch(updateDataOfPath({ path, data }));\n      // close\n      dispatch(setEditMode(null));\n    },\n    [dispatch, setEditMode, updateDataOfPath]\n  );\n  const onKeyUpdate = useCallback(\n    (path, key) => {\n      // update the value\n      dispatch(updateKeyOfPath({ path, key }));\n      // close\n      dispatch(setEditMode(null));\n    },\n    [dispatch, setEditMode, updateKeyOfPath]\n  );\n  const onCancel = useCallback(() => {\n    // close\n    dispatch(setEditMode(null));\n  }, [dispatch, setEditMode]);\n\n  const onAddButtonClicked = useCallback(\n    (event) => {\n      const name = event.target.dataset.name;\n      dispatch(duplicatePath([...path, name]));\n    },\n    [dispatch, duplicatePath, path]\n  );\n\n  // validation for object key name\n  const checkValid = useCallback(\n    (value) => {\n      if (value.length === 0) return false;\n      if (Object.keys(data).includes(value)) return false;\n      return true;\n    },\n    [data]\n  );\n\n  let result = <></>;\n  if (data === null) {\n    // null\n    result = <span className=\"null\">null</span>;\n  } else if (data !== null && typeof data === typeof {}) {\n    // Object or Array\n    let rows = Object.keys(data).map((name) => {\n      const newPath = path.length === 0 ? [name] : [...path, name];\n      return (\n        <tr key={name}>\n          {insert && (\n            <td className=\"button-cell\">\n              <i\n                className={`fas fa-plus-circle ${\n                  editMode !== null ? 'invisible' : ''\n                }`}\n                data-name={name}\n                onClick={onAddButtonClicked}\n              />\n            </td>\n          )}\n          <th>\n            <div className=\"d-flex\">\n              <KeyEditButtons\n                data={data}\n                path={newPath}\n                hidden={editMode !== null}\n              />\n              {editMode !== null &&\n              editMode.type === EditType.Key &&\n              _.isEqual(newPath, editMode.path) ? (\n                <KeyEditor\n                  path={newPath}\n                  defaultValue={name}\n                  onUpdate={onKeyUpdate}\n                  onCancel={onCancel}\n                  checkValid={checkValid}\n                />\n              ) : (\n                <span className=\"key-label\" title={newPath.join('.')}>\n                  {name}\n                </span>\n              )}\n            </div>\n          </th>\n          <td className=\"data-cell\">\n            <div className=\"d-flex\">\n              <div className=\"flex-grow-1\">\n                {editMode !== null &&\n                editMode.type === EditType.Value &&\n                _.isEqual(newPath, editMode.path) ? (\n                  <ValueEditor\n                    path={newPath}\n                    defaultValue={data[name]}\n                    onUpdate={onValueUpdate}\n                    onCancel={onCancel}\n                  />\n                ) : (\n                  <ObjectType data={data[name]} path={newPath} />\n                )}\n              </div>\n              <EditButtons\n                data={data[name]}\n                path={newPath}\n                hidden={editMode !== null}\n              />\n            </div>\n          </td>\n        </tr>\n      );\n    });\n    const typeLabel = isArray(data) ? 'Array' : 'Object';\n    const headerLabel = '[' + rows.length.toString() + ']';\n    result = (\n      <table\n        data-path={`/${path.join('/')}`}\n        className={`${insert ? '' : 'no-margin'}`}\n      >\n        <thead data-level={path.length % maxLevel}>\n          <tr>\n            {insert && (\n              <td className=\"button-cell\">\n                <i\n                  className={`fas fa-plus-circle ${\n                    editMode !== null ? 'invisible' : ''\n                  }`}\n                  data-name={''}\n                  onClick={onAddButtonClicked}\n                />\n              </td>\n            )}\n            <th className=\"expand\">\n              <Expander\n                defaultValue={expanded}\n                onChangeExpansion={onChangeExpansion}\n              />\n            </th>\n            <th className=\"objectType\">{`${typeLabel} ${headerLabel}`}</th>\n          </tr>\n        </thead>\n        <tbody className={expanded ? 'expanded' : ''}>{rows}</tbody>\n      </table>\n    );\n  } else if (typeof data === typeof 1) {\n    // Number\n    result = <NumberType data={data} />;\n  } else if (typeof data === typeof 'a') {\n    // String\n    result = <StringType data={data} />;\n  } else if (typeof data === typeof true) {\n    // Boolean\n    result = <BooleanType data={data} />;\n  } else {\n    // something else\n    result = (\n      <span className=\"undefined\" title={path.join('.')}>\n        {data}\n      </span>\n    );\n  }\n  return result;\n};\n\nexport default ObjectType;\n","import React from 'react';\nimport ObjectType from '../object/ObjectType';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '..';\n\nconst VisualizedData: React.FC = () => {\n  const data = useSelector((state: RootState) => state.data.data);\n  const text = useSelector((state: RootState) => state.textarea.localText);\n  return (\n    <div className=\"visualized-data\">\n      {text.length > 0 ? (\n        <ObjectType data={data} path={[]} />\n      ) : (\n        <div className=\"placeholder p-2\">No data</div>\n      )}\n    </div>\n  );\n};\n\nexport default VisualizedData;\n","import React from 'react';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer className=\"bg-dark\">\n      <div>\n        <span>\n          <a href=\"https://github.com/ogaoga/json-visual-editor\">\n            Source code on GitHub\n          </a>\n        </span>\n        <span> | </span>\n        <span>\n          <a href=\"http://qiita.com/ogaoga/items/1dae5586601e6900c3f1\">\n            Development guide on Qiita\n          </a>\n        </span>\n      </div>\n      <div>\n        <span>Copyright &copy; 2016 - 2020 ogaoga.org</span>\n      </div>\n    </footer>\n  );\n};\n","import React from 'react';\n\nexport const Header: React.FC = () => {\n  return (\n    <header className=\"navbar navbar-dark bg-dark\">\n      <a\n        className=\"navbar-brand\"\n        href=\"https://ogaoga.github.io/json-visual-editor/\"\n      >\n        JSON Visual Editor <span className=\"badge badge-secondary\">v2</span>\n      </a>\n      <ul className=\"nav justify-content-end\">\n        <li>\n          <a\n            href=\"https://github.com/ogaoga/json-visual-editor/issues/new\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fas fa-comment\" /> Feedback\n          </a>\n        </li>\n      </ul>\n    </header>\n  );\n};\n","import React, { useMemo, useCallback } from 'react';\nimport TextArea from './TextArea';\nimport VisualizedData from './VisualizedData/VisualizedData';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '.';\nimport { textareaSlice } from './features/textarea/textareaSlice';\n\nconst minFrameWidth = 100;\n\nexport const Page: React.FC = () => {\n  const isDragging = useSelector(\n    (state: RootState) => state.textarea.isDragging\n  );\n  const width = useSelector((state: RootState) => state.textarea.width);\n\n  const { setWidth, setDragging } = textareaSlice.actions;\n  const dispatch = useDispatch();\n\n  const onMouseDown = useCallback(() => {\n    dispatch(setDragging(true));\n  }, [setDragging, dispatch]);\n  const onMouseUpOrLeave = useCallback(() => {\n    dispatch(setDragging(false));\n  }, [setDragging, dispatch]);\n  const onMouseMove = useCallback(\n    (event: React.MouseEvent) => {\n      if (isDragging) {\n        const newWidth = event.clientX;\n        if (newWidth > minFrameWidth) {\n          dispatch(setWidth(newWidth));\n        }\n      }\n    },\n    [isDragging, setWidth, dispatch]\n  );\n\n  const leadingStyle = useMemo(() => {\n    return {\n      width: width,\n    };\n  }, [width]);\n\n  return (\n    <>\n      <Header />\n      <main\n        className=\"d-flex flex-row flex-grow-1\"\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUpOrLeave}\n        onMouseLeave={onMouseUpOrLeave}\n      >\n        <div className=\"leading-side d-flex flex-column\" style={leadingStyle}>\n          <section className=\"flex-grow-1\">\n            <TextArea />\n          </section>\n        </div>\n        <div\n          className=\"adjuster d-flex justify-content-center align-items-center\"\n          onMouseDown={onMouseDown}\n        >\n          <i className=\"fas fa-ellipsis-v\" />\n        </div>\n        <div className=\"trailing-side d-flex flex-column flex-grow-1 pr-2 pl-1\">\n          <div className=\"flex-grow-1\">\n            <div className=\"scroll-wrapper\">\n              <VisualizedData />\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Page } from './Page';\n\nconst App: React.FC = () => {\n  const [previousEvent, setPreviousEvent] = useState<string | null>(null);\n\n  useEffect(() => {\n    let body = document.getElementsByTagName('body')[0];\n    body.addEventListener('drop', (e) => {\n      /*\n      if (e.target.id !== 'json-text') {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      */\n      e.preventDefault();\n      e.stopPropagation();\n\n      setPreviousEvent('drop');\n      body.classList.remove('dragging');\n    });\n    body.addEventListener('dragover', (e) => {\n      if (previousEvent === 'dragenter') {\n        body.classList.add('dragging');\n      }\n      setPreviousEvent('dragover');\n      e.preventDefault();\n      return false;\n    });\n    body.addEventListener('dragenter', () => {\n      setPreviousEvent('dragenter');\n    });\n    body.addEventListener('dragleave', () => {\n      if (previousEvent === 'dragover') {\n        body.classList.remove('dragging');\n      }\n      setPreviousEvent('dragleave');\n    });\n  }, [previousEvent]);\n\n  return <Page />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport './index.scss';\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { textareaSlice } from './features/textarea/textareaSlice';\nimport { dataSlice } from './features/data/dataSlice';\n\nimport 'bootstrap';\n\n// ToDo: Add `redux-localstorage` to persiste the data\n\nconst rootReducer = combineReducers({\n  data: dataSlice.reducer,\n  textarea: textareaSlice.reducer,\n});\nconst store = configureStore({ reducer: rootReducer });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#myApp')\n);\n"],"sourceRoot":""}